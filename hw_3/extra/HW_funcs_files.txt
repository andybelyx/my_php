Функции:

1.
Написать функцию, которая делает чай в пакетике. Функция должна принимать вид чая, и вместо всех действий выводить текст:
createTea('черный');
Выводит:

Заходим на кухню
Берем пакетик из ящика "черный чай"
Заливаем пакетик кипятком

Соответственно, 
createTea('зеленый');
Выводит:

Заходим на кухню
Берем пакетик из ящика "зеленый чай"
Заливаем пакетик кипятком

2.
Написать функцию getAnswer, которая отвечает на вопрос "Да" или "Нет" (с вероятностью 50/50). Вопрос принимает параметром:
getAnswer("Мне завтра повезет?")
Выводит "Да". Или "Нет". Для генерации ответа можно использовать стандатрную функцию rand().

3.
Написать функцию transformNumber, которая принимает число, и возвращает его же, если оно больше 15 или меньше 3. Иначе возвращает 3.
transformNumber(0) - выводит 0
transformNumber(3) - выводит 3
transformNumber(5) - выводит 3
transformNumber(20) - выводит 20

4.
Дописать анонимные функции для умножения и деления (в материалах урока - funcs.php).
Проверть, убедиться что функции работают правильно



Файлы:

1.
Прочитать информацию из файла, записать в другой файл.
Во втором продублировать каждую строку два раза. Т.е. если в первом файле было

first
second

во втором будет 

first
first
second
second

2.
Написать функцию appendContents, которая будет дописывать в файл содержимое другого файла.
Есть файл output.txt, и еще несколько файлов. Например, file1.txt, file2.txt. appendContents будет приниманть параметром название файла, и добавлять содержимое этого файла в output.txt. 
Вызывать функцию нужно будет так:
appendContents('file1.txt')

3.
Считать информацию из файла, записать в другой файл, как в первом задании, только вместо дублирования записей переводить их в верхний регистр:

first
second

перейдет в

FIRST
SECOND

Можно пользоваться функцией strtoupper

4.
Сделать чтобы преобразование для предыдущего задания задавалось анонимной функцией:

$toupper = function($input) {
  return strtoupper($input);
};


Дополнительно:
Если задания выше показались вам простыми, можете распарсить xml-файл:
Есть persons.xml с таким содержимым:

<persons>
  <penson>
    <name>Vasil</name>
    <surname>Ivanov</surname>
  </person>
  <penson>
    <name>Vlad</name>
    <surname>Petrov</surname>
  </person>
</persons>

Нужно получить из него массив такого вида:
[
  [
    'name' => 'Vasil',
    'surname' => 'Ivanov'
  ],
  [
    'name' => 'Vlad',
    'surname' => 'Petrov'
  ]
]

Можно пользоваться стандартными средствами ПХП - simplexmlelement
Можно сделать все руками - воспользоваться функциями работы со строками вроде strpos. Попробуйте сначала с помощью циклов while выделить области с персонами:

    <name>Vlad</name>
    <surname>Petrov</surname>

их будет легче анализировать.








